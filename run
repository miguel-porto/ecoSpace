#!/usr/bin/env bash
SERVICE_NAME="ecoSpace Server"
PATH_TO_JAR="java -Djava.library.path=../native/target -cp ../java/target/ecoSpace-server-java-1.0-SNAPSHOT.jar:./* pt.floraon.ecospace.EcoSpace"
PID_PATH_NAME=/tmp/MyService-pid
PORT=7520

cd dependencies

detectrunning() {
      ## This could be achieved with filtering using -sTCP:LISTEN but this option is not available
      ## on lsof v4.78 which is the one bundled with some distros. So we have to do this grep below
      newpid=$(lsof -i :$PORT -F T -Ts | grep -i "TST=LISTEN" -B1 | head -n1)
      newpid=${newpid:1}
}

case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            nohup $PATH_TO_JAR /tmp 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME

		STARTED_PID=$(cat $PID_PATH_NAME);

	    echo -n "Waiting for server to be ready."
	    while kill -0 $STARTED_PID 2> /dev/null ; do
	      ## wait for start, pick up the server listening on the port
		detectrunning

	      if [ $newpid ] ; then
	         break
	      fi

	      printf "."
	      sleep 1
	    done

                        
           printf "\n$SERVICE_NAME started with pid=$newpid!\n\n"
        else
            echo "$SERVICE_NAME is already running"
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stoping..."
            kill $PID;
            echo "$SERVICE_NAME stopped."
            rm $PID_PATH_NAME
        else
            echo "$SERVICE_NAME is not running"
        fi
    ;;
    restart)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping...";
            kill $PID;
            echo "$SERVICE_NAME stopped ...";
            rm $PID_PATH_NAME
            echo "$SERVICE_NAME starting ..."
            nohup $PATH_TO_JAR /tmp 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    direct)
		$PATH_TO_JAR
    ;;
	*)
    echo "Usage: run { start | stop | restart | direct }"
    exit 0;;

esac 



